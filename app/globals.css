/* 1) Import Tailwind + Plugins */
@import "tailwindcss";

/* 2) Define all the custom theme variables you had in tailwind.config.ts */
@theme {
  /* Colors */
  --color-primary-100: #fff1e6;
  --color-primary-500: #ff7000;

  --color-customDark-100: #000000;
  --color-customDark-200: #0f1117;
  --color-customDark-300: #151821;
  --color-customDark-400: #212734;
  --color-customDark-500: #101012;

  --color-light-400: #858ead;
  --color-light-500: #7b8ec8;
  --color-light-700: #dce3f1;
  --color-light-800: #f4f6f8;
  --color-light-850: #fdfdfd;
  --color-light-900: #ffffff;

  /* Border radius */
  --border-radius-2: 8px;
  --border-radius-1-5: 6px;
  --border-radius-lg: var(--radius);
  --border-radius-md: calc(var(--radius) - 2px);
  --border-radius-sm: calc(var(--radius) - 4px);

  /* Box shadows */
  --shadow-light-100:
    0px 12px 20px 0px rgba(184, 184, 184, 0.03),
    0px 6px 12px 0px rgba(184, 184, 184, 0.02),
    0px 2px 4px 0px rgba(184, 184, 184, 0.03);
  --shadow-light-200: 10px 10px 20px 0px rgba(218, 213, 213, 0.1);
  --shadow-light-300: -10px 10px 20px 0px rgba(218, 213, 213, 0.1);
  --shadow-dark-100: 0px 2px 10px 0px rgba(46, 52, 56, 0.1);
  --shadow-dark-200: 2px 0px 20px 0px rgba(39, 36, 36, 0.04);

  /* Background images */
  --bg-auth-dark: url("/images/auth-dark.png");
  --bg-auth-light: url("/images/auth-light.png");

  /* Font families */
  --font-inter: var(--font-inter);
  --font-space-grotesk: var(--font-space-grotesk);

  /* Also merge your existing @theme inline values */
  --color-background: var(--background);
  --color-foreground: var(--foreground);
  --font-sans: var(--font-geist-sans);
  --font-mono: var(--font-geist-mono);
}

/* 3) Keep the rest of your original global.css content */

:root {
  --background: #ffffff;
  --foreground: #171717;
}

/* If userâ€™s system prefers dark mode, adjust these vars */
@media (prefers-color-scheme: dark) {
  :root {
    --background: #0a0a0a;
    --foreground: #ededed;
  }
}

body {
  background: var(--background);
  color: var(--foreground);
  font-family: Arial, Helvetica, sans-serif;
}

/* Custom Base Layer for Additional Variables */
@layer base {
  :root {
    --radius: 0.5rem;
  }
}

/* Scrollbar Styles */
.custom-scrollbar::-webkit-scrollbar {
  width: 3px;
  height: 3px;
  border-radius: 2px;
}

.custom-scrollbar::-webkit-scrollbar-track {
  background: #ffffff;
}

.custom-scrollbar::-webkit-scrollbar-thumb {
  background: #888;
  border-radius: 50px;
}

.custom-scrollbar::-webkit-scrollbar-thumb:hover {
  background: #555;
}

.no-scrollbar::-webkit-scrollbar {
  display: none;
}

.no-scrollbar {
  -ms-overflow-style: none;
  /* IE/Edge */
  scrollbar-width: none;
  /* Firefox */
}

/* Theming Helpers */
.active-theme {
  filter: invert(53%) sepia(98%) saturate(3332%) hue-rotate(0deg)
    brightness(104%) contrast(106%) !important;
}

.hash-span {
  margin-top: -140px;
  padding-bottom: 140px;
  display: block;
}

.mdxeditor-toolbar {
  background: #ffffff !important;
}

.dark .mdxeditor-toolbar {
  background: #151821 !important;
}

.dark .mdxeditor-toolbar button svg {
  color: #858ead !important;
}

.dark .mdxeditor-toolbar button:hover svg {
  color: #000 !important;
}

.dark .mdxeditor-toolbar [role="separator"] {
  border-color: #555 !important;
}

/* Markdown styling overrides */
.markdown a {
  color: #1da1f2;
}

.markdown a,
code {
  overflow-wrap: break-word;
  word-wrap: break-word;
  -ms-word-break: break-all;
  word-break: break-all;
  word-break: break-word;
  -ms-hyphens: auto;
  -moz-hyphens: auto;
  -webkit-hyphens: auto;
  hyphens: auto;
  padding: 2px;
  color: #ff7000 !important;
}

.markdown pre {
  display: grid;
  width: 100%;
}

.markdown pre code {
  width: 100%;
  display: block;
  overflow-x: auto;
  color: inherit !important;
}

[data-lexical-editor="true"] {
  height: 350px !important;
  overflow-y: auto !important;
}

.h1-bold {
  @apply text-[30px] font-bold leading-[42px] tracking-tighter;
}

/* DIVIDER */
